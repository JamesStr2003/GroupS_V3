<<<<<<< Updated upstream
View(players)
#Kitchen Sink Model
kitchen_sink <- lm(value_eur ~ pace + shooting + passing + physic + dribbling + defending + player_group, data = players)
#Conditions
mplot(kichen_sink, which = 1)
#Kitchen Sink Model
kitchen_sink <- lm(value_eur ~ pace + shooting + passing + physic + dribbling + defending + player_group, data = players)
#Conditions
mplot(kitchen_sink, which = 1)
mplot(kitchen_sink, which = 2)
car::vif(kitchen_sink)
#
#Kitchen Sink Model
kitchen_sink <- lm(value_eur ~ pace + shooting + passing + physic + dribbling + defending + player_group, data = players)
#Conditions
mplot(kitchen_sink, which = 1)
mplot(kitchen_sink, which = 2)
car::vif(kitchen_sink)
#Model Summary
msummary(kitchen_sink)
car::vif(mod3)
mod3 <-  lm(log_val ~ pace + shooting + passing + physic, data = players3)
#Model with log (It works, going to use 4 variables)
players3 <- players |>
mutate(log_val = log(value_eur))
mod3 <-  lm(log_val ~ pace + shooting + passing + physic, data = players3)
car::vif(mod3)
#Kitchen Sink Model
kitchen_sink <- lm(value_eur ~ pace + shooting + passing + physic + dribbling + defending + player_group, data = players)
#Conditions
mplot(kitchen_sink, which = 1)
mplot(kitchen_sink, which = 2)
car::vif(kitchen_sink)
#Model Summary
msummary(kitchen_sink)
#Adding transformation
players <- players |>
mutate(log_value = log(value_eur))
View(players)
#Adding transformation
players <- players |>
mutate(log_value = log(value_eur))
#Transformed Kitchen Sink Model
log_kitchen_sink <- lm(log_value ~ pace + shooting + passing + physic + dribbling + defending + player_group, data = players)
#Conditions
mplot(log_kitchen_sink, which = 1)
mplot(log_kitchen_sink, which = 2)
car::vif(log_kitchen_sink)
#Model Summary
msummary(log_kitchen_sink)
#Adding transformation
players <- players |>
mutate(log_value = log(value_eur))
#Transformed Kitchen Sink Model
log_kitchen_sink <- lm(log_value ~ pace + shooting + passing + physic + dribbling + defending + player_group, data = players)
#Conditions
mplot(log_kitchen_sink, which = 1)
mplot(log_kitchen_sink, which = 2)
car::vif(log_kitchen_sink)
#Model Summary
msummary(log_kitchen_sink)
best <- regsubsets(log_value ~ pace + shooting + passing + physic + dribbling + defending + player_group, data = players, nbest = 1)
with(summary(best), data.frame(rsq, cp, outmat))
#Five variable model
mod <- lm(log_value ~ pace + passing + physic + dribbling + player_groupMidfielder, data = players)
#Five variable model
mod <- lm(log_value ~ pace + passing + physic + dribbling + player_group:Midfielder, data = players)
#Five variable model
mod <- lm(log_value ~ pace + passing + physic + dribbling + Midfielder, data = players)
#Five variable model
mod <- lm(log_value ~ pace + passing + physic + dribbling + player_group, data = players)
#Conditions
mplot(mod, which = 1)
mplot(mod, which = 2)
car::vif(mod)
#Model Summary
msummary(mod)
#Five variable model
mod <- lm(log_value ~ pace + passing + physic + dribbling, data = players)
#Conditions
mplot(mod, which = 1)
mplot(mod, which = 2)
car::vif(mod)
#Model Summary
msummary(mod)
#Five variable model
mod <- lm(log_value ~ pace + passing + physic, data = players)
#Conditions
mplot(mod, which = 1)
mplot(mod, which = 2)
car::vif(mod)
#Model Summary
msummary(mod)
#Five variable model
mod <- lm(log_value ~ passing*dribbling + pace + physic, data = players)
#Conditions
mplot(mod, which = 1)
mplot(mod, which = 2)
car::vif(mod)
#Model Summary
msummary(mod)
#Five variable model
mod <- lm(log_value ~ passing + dribbling + pace + physic, data = players)
#Conditions
mplot(mod, which = 1)
mplot(mod, which = 2)
car::vif(mod)
#Model Summary
msummary(mod)
#Five variable model
mod <- lm(log_value ~ passing*dribbling + pace + physic, data = players)
#Conditions
mplot(mod, which = 1)
mplot(mod, which = 2)
car::vif(mod)
#Model Summary
msummary(mod)
#Five variable model
mod <- lm(log_value ~ passing* pace + dribbling + physic, data = players)
#Conditions
mplot(mod, which = 1)
mplot(mod, which = 2)
car::vif(mod)
#Model Summary
msummary(mod)
#Five variable model
mod <- lm(log_value ~ passing* physic + dribbling + pace, data = players)
#Conditions
mplot(mod, which = 1)
mplot(mod, which = 2)
car::vif(mod)
#Model Summary
msummary(mod)
#Five variable model
mod <- lm(log_value ~ passing* physic + dribbling + pace, data = players)
#Conditions
mplot(mod, which = 1)
mplot(mod, which = 2)
car::vif(mod)
#Model Summary
msummary(mod)
#Five variable model
mod <- lm(log_value ~ passing + physic + dribbling + pace + player_group, data = players)
#Conditions
mplot(mod, which = 1)
mplot(mod, which = 2)
car::vif(mod)
#Model Summary
msummary(mod)
attackers <- players3 %>%
filter(player_group == "Attacker")
bigkitch1 <- lm(log_val ~ passing + shooting + pace + physic + dribbling + defending,  data = players3)
msummary(bigkitch1)
mplot(bigkitch1, which = 1)
mplot(bigkitch1, which = 2)
best5 <- regsubsets(log_val ~ pace + shooting + passing + physic + dribbling + defending, data = attackers, nbest = 1)
with(summary(best5), data.frame(rsq, cp, outmat))
car::vif(bigkitch1)
attackers <- players3 %>%
filter(player_group == "Midfielder")
bigkitch1 <- lm(log_val ~ passing + shooting + pace + physic + dribbling + defending,  data = players3)
msummary(bigkitch1)
mplot(bigkitch1, which = 1)
mplot(bigkitch1, which = 2)
best5 <- regsubsets(log_val ~ pace + shooting + passing + physic + dribbling + defending, data = attackers, nbest = 1)
with(summary(best5), data.frame(rsq, cp, outmat))
car::vif(bigkitch1)
attackers <- players3 %>%
filter(player_group == "Midfielder")
bigkitch1 <- lm(log_val ~ passing + pace + physic + dribbling,  data = players3)
msummary(bigkitch1)
mplot(bigkitch1, which = 1)
mplot(bigkitch1, which = 2)
best5 <- regsubsets(log_val ~ pace +  passing + physic + dribbling, data = attackers, nbest = 1)
with(summary(best5), data.frame(rsq, cp, outmat))
car::vif(bigkitch1)
#Five variable model
mod <- lm(log_value ~ passing + physic + dribbling + player_group, data = players)
#Conditions
mplot(mod, which = 1)
mplot(mod, which = 2)
car::vif(mod)
#Model Summary
msummary(mod)
#Five variable model
mod <- lm(log_value ~ passing + physic + dribbling + pace + player_group, data = players)
#Conditions
mplot(mod, which = 1)
mplot(mod, which = 2)
car::vif(mod)
#Model Summary
msummary(mod)
#Five variable model
mod <- lm(log_value ~ passing + physic + dribbling + pace + player_group, data = players)
#Conditions
mplot(mod, which = 1)
mplot(mod, which = 2)
car::vif(mod)
#Model Summary
msummary(mod)
ggplot(players, aes(x = player_group, y = log_value)) +
geom_boxplot(fill = "skyblue", color = "blue") +
labs(x = "Player Group", y = "log_value Euro") +
ggtitle("Boxplot of log_value Euro by Player Group")
players2 <- select(players, "pace", "shooting", "passing", "dribbling", "defending", "physic", "log_value")
ggpairs(players2)
#Kitchen Sink Model
kitchen_sink <- lm(value_eur ~ pace + shooting + passing + physic + dribbling + defending, data = players)
#Conditions
mplot(kitchen_sink, which = 1)
mplot(kitchen_sink, which = 2)
car::vif(kitchen_sink)
#Model Summary
msummary(kitchen_sink)
#Adding transformation
players <- players |>
mutate(log_value = log(value_eur))
#Transformed Kitchen Sink Model
log_kitchen_sink <- lm(log_value ~ pace + shooting + passing + physic + dribbling + defending, data = players)
#Conditions
mplot(log_kitchen_sink, which = 1)
mplot(log_kitchen_sink, which = 2)
car::vif(log_kitchen_sink)
#Model Summary
msummary(log_kitchen_sink)
best <- regsubsets(log_value ~ pace + shooting + passing + physic + dribbling + defending, data = players, nbest = 1)
with(summary(best), data.frame(rsq, cp, outmat))
#Five variable model
mod <- lm(log_value ~ passing + physic + dribbling + pace, data = players)
#Conditions
mplot(mod, which = 1)
mplot(mod, which = 2)
car::vif(mod)
#Model Summary
msummary(mod)
stepwise <- regsubsets(log_value ~ pace + shooting + passing + physic + dribbling + defending, data = players, methodwith(summary(stepwise), data.frame(cp, outmat))
stepwise <- regsubsets(log_value ~ pace + shooting + passing + physic + dribbling + defending, data = players, method = "seqrep")
stepwise <- regsubsets(log_value ~ pace + shooting + passing + physic + dribbling + defending, data = players, method = "seqrep")
summary(stepwise)
stepwise <- regsubsets(log_value ~ pace + shooting + passing + physic + dribbling + defending, data = players, method = "seqrep")
with(summary(stepwise), data.frame(rsq, cp, outmat))
best <- regsubsets(log_value ~ pace + shooting + passing + physic + dribbling + defending, data = players, nbest = 1)
with(summary(best), data.frame(rsq, cp, outmat))
stepwise <- regsubsets(log_value ~ pace + shooting + passing + physic + dribbling + defending, data = players, method = "seqrep")
with(summary(stepwise), data.frame(rsq, cp, outmat))
#Five variable model
mod <- lm(log_value ~ passing + physic + dribbling + pace, data = players)
#Conditions
mplot(mod, which = 1)
mplot(mod, which = 2)
car::vif(mod)
#Model Summary
msummary(mod)
#Five variable model
mod2 <- lm(log_value ~ passing + physic + dribbling, data = players)
#Conditions
mplot(mod2, which = 1)
mplot(mod2, which = 2)
car::vif(mod2)
#Model Summary
msummary(mod2)
View(players)
ggplot(players, aes(x = player_group, y = passing)) +
geom_boxplot(fill = "skyblue", color = "blue") +
labs(x = "Player Group", y = "log_value Euro") +
ggtitle("Boxplot of log_value Euro by Player Group")
ggplot(players, aes(x = player_group, y = dribbling)) +
geom_boxplot(fill = "skyblue", color = "blue") +
labs(x = "Player Group", y = "log_value Euro") +
ggtitle("Boxplot of log_value Euro by Player Group")
#Boxplots
g <- ggplot(players, aes(x = player_group, y = log_value)) +
geom_boxplot(fill = "skyblue", color = "blue") +
labs(x = "Player Group", y = "log_value Euro") +
ggtitle("TITLE LATER")
#Boxplots
g <- ggplot(players, aes(x = player_group, y = value_eur)) +
geom_boxplot(fill = "skyblue", color = "blue") +
labs(x = "Player Group", y = "log_value Euro") +
ggtitle("TITLE LATER")
#Boxplots
g <- ggplot(players, aes(x = player_group, y = value_eur)) +
geom_boxplot(fill = "skyblue", color = "blue") +
labs(x = "Player Group", y = "log_value Euro") +
ggtitle("TITLE LATER")
#Boxplots
g <- ggplot(players, aes(x = player_group, y = log_value)) +
geom_boxplot(fill = "skyblue", color = "blue") +
labs(x = "Player Group", y = "log_value Euro") +
ggtitle("Boxplot of log_value Euro by Player Group")
grid.arrange(g,h,i,j,k,l,m,n)
#Boxplots
g <- ggplot(players, aes(x = player_group, y = log_value)) +
geom_boxplot(fill = "skyblue", color = "blue") +
labs(x = "Player Group", y = "log_value Euro") +
ggtitle("Boxplot of log_value Euro by Player Group")
h <- ggplot(players, aes(x = player_group, y = dribbling)) +
geom_boxplot(fill = "skyblue", color = "blue") +
labs(x = "Player Group", y = "dribbling rating") +
ggtitle("TITLE LATER")
i <- ggplot(players, aes(x = player_group, y = passing)) +
geom_boxplot(fill = "skyblue", color = "blue") +
labs(x = "Player Group", y = "passing rating") +
ggtitle("TITLE LATER")
k <- ggplot(players, aes(x = player_group, y = pace)) +
geom_boxplot(fill = "skyblue", color = "blue") +
labs(x = "Player Group", y = "pace raing") +
ggtitle("TITLE LATER")
l <- ggplot(players, aes(x = player_group, y = physicality)) +
geom_boxplot(fill = "skyblue", color = "blue") +
labs(x = "Player Group", y = "physicality rating") +
ggtitle("TITLE LATER")
m <- ggplot(players, aes(x = player_group, y = shooting)) +
geom_boxplot(fill = "skyblue", color = "blue") +
labs(x = "Player Group", y = "shooting rating") +
ggtitle("TITLE LATER")
n <- ggplot(players, aes(x = player_group, y = defending)) +
geom_boxplot(fill = "skyblue", color = "blue") +
labs(x = "Player Group", y = "defending rating") +
ggtitle("TITLE LATER")
grid.arrange(g,h,i,j,k,l,m,n)
grid.arrange(g,h,i,j,k,l,m)
#Boxplots
g <- ggplot(players, aes(x = player_group, y = log_value)) +
geom_boxplot(fill = "skyblue", color = "blue") +
labs(x = "Player Group", y = "log_value Euro") +
ggtitle("Boxplot of log_value Euro by Player Group")
h <- ggplot(players, aes(x = player_group, y = dribbling)) +
geom_boxplot(fill = "skyblue", color = "blue") +
labs(x = "Player Group", y = "dribbling rating") +
ggtitle("TITLE LATER")
i <- ggplot(players, aes(x = player_group, y = passing)) +
geom_boxplot(fill = "skyblue", color = "blue") +
labs(x = "Player Group", y = "passing rating") +
ggtitle("TITLE LATER")
j <- ggplot(players, aes(x = player_group, y = pace)) +
geom_boxplot(fill = "skyblue", color = "blue") +
labs(x = "Player Group", y = "pace raing") +
ggtitle("TITLE LATER")
k <- ggplot(players, aes(x = player_group, y = physicality)) +
geom_boxplot(fill = "skyblue", color = "blue") +
labs(x = "Player Group", y = "physicality rating") +
ggtitle("TITLE LATER")
l <- ggplot(players, aes(x = player_group, y = shooting)) +
geom_boxplot(fill = "skyblue", color = "blue") +
labs(x = "Player Group", y = "shooting rating") +
ggtitle("TITLE LATER")
m <- ggplot(players, aes(x = player_group, y = defending)) +
geom_boxplot(fill = "skyblue", color = "blue") +
labs(x = "Player Group", y = "defending rating") +
ggtitle("TITLE LATER")
grid.arrange(g,h,i,j,k,l,m)
#Boxplots
g <- ggplot(players, aes(x = player_group, y = log_value)) +
geom_boxplot(fill = "skyblue", color = "blue") +
labs(x = "Player Group", y = "log_value Euro") +
ggtitle("Boxplot of log_value Euro by Player Group")
h <- ggplot(players, aes(x = player_group, y = dribbling)) +
geom_boxplot(fill = "skyblue", color = "blue") +
labs(x = "Player Group", y = "dribbling rating") +
ggtitle("TITLE LATER")
i <- ggplot(players, aes(x = player_group, y = passing)) +
geom_boxplot(fill = "skyblue", color = "blue") +
labs(x = "Player Group", y = "passing rating") +
ggtitle("TITLE LATER")
j <- ggplot(players, aes(x = player_group, y = pace)) +
geom_boxplot(fill = "skyblue", color = "blue") +
labs(x = "Player Group", y = "pace raing") +
ggtitle("TITLE LATER")
k <- ggplot(players, aes(x = player_group, y = physic)) +
geom_boxplot(fill = "skyblue", color = "blue") +
labs(x = "Player Group", y = "physicality rating") +
ggtitle("TITLE LATER")
l <- ggplot(players, aes(x = player_group, y = shooting)) +
geom_boxplot(fill = "skyblue", color = "blue") +
labs(x = "Player Group", y = "shooting rating") +
ggtitle("TITLE LATER")
m <- ggplot(players, aes(x = player_group, y = defending)) +
geom_boxplot(fill = "skyblue", color = "blue") +
labs(x = "Player Group", y = "defending rating") +
ggtitle("TITLE LATER")
grid.arrange(g,h,i,j,k,l,m)
g <- ggplot(players, aes(x = player_group, y = log_value)) +  #SHOULD WE USE LOG OR NORMAL VALUE
geom_boxplot(fill = "skyblue", color = "blue") +
labs(x = "Player Group", y = "log_value Euro") +
ggtitle("Boxplot of log_value Euro by Player Group")
g <- ggplot(players, aes(x = player_group, y = log_value)) +  #SHOULD WE USE LOG OR NORMAL VALUE
geom_boxplot(fill = "skyblue", color = "blue") +
labs(x = "Player Group", y = "log_value Euro") +
ggtitle("Boxplot of log_value Euro by Player Group")
#Five variable model
mod2 <- lm(log_value ~ passing + physic + dribbling, data = players)
#Conditions
mplot(mod2, which = 1)
mplot(mod2, which = 2)
car::vif(mod2)
#Model Summary
msummary(mod2)
g <- ggplot(players, aes(x = player_group, y = log_value)) +  #SHOULD WE USE LOG OR NORMAL VALUE
geom_boxplot(fill = "skyblue", color = "blue") +
labs(x = "Player Group", y = "log_value Euro") +
ggtitle("Boxplot of log_value Euro by Player Group")
#Boxplots
ggplot(players, aes(x = player_group, y = log_value)) +  #SHOULD WE USE LOG OR NORMAL VALUE
geom_boxplot(fill = "skyblue", color = "blue") +
labs(x = "Player Group", y = "log_value Euro") +
ggtitle("Boxplot of log_value Euro by Player Group")
#Model with player_group
mod3 <- lm(log_value ~ passing + physic + dribbling + pace + physic + shooting + player_group, data = players)
#Model with player_group
mod3 <- lm(log_value ~ passing + physic + dribbling + pace + physic + shooting + player_group, data = players)
#Conditions
mplot(mod3, which = 1)
mplot(mod3, which = 2)
car::vif(mod3)
#Model Summary
msummary(mod3)
best <- regsubsets(log_value ~ pace + shooting + passing + physic + dribbling + defending, data = players, nbest = 1)
with(summary(best), data.frame(rsq, cp, outmat))
best3 <- regsubsets(log_value ~ passing + physic + dribbling + pace + physic + shooting + player_group, data = players, nbest = 1)
with(summary(best3), data.frame(rsq, cp, outmat))
#Model with player_group
mod4 <- lm(log_value ~ passing + physic + dribbling + pace + physic + shooting + player_groupMidfielder, data = players)
# Convert player_group to a factor
players$player_group <- factor(players$player_group)
# Create dummy variables for player_group
dummy_vars <- model.matrix(~ player_group - 1, data = players)
# Combine dummy variables with other predictors
model_data <- cbind(players[, c("passing", "physic", "dribbling", "pace")], dummy_vars)
# Fit the linear regression model
model <- lm(log_value ~ ., data = model_data)
View(model_data)
players <- players |>
mutate(
is_attacker = ifelse(player_positions %in% c("CF", "SS", "ST", "LW", "RW"), 1, 0),
is_midfielder = ifelse(player_positions %in% c("LM", "LCM", "CM", "RCM", "RM", "CDM", "CAM"), 1, 0),
is_defender = ifelse(player_positions %in% c("LWB", "LB", "LCB", "CB", "RCB", "RB", "RWB", "SW"), 1, 0)
=======
#Case_when command was recommended to us in STD fellows
experiment <- transfer_table1 %>%
mutate(Expected_Value3 = case_when(str_detect(ExpectedValue, "k") ~ Expected_Value2/1000, TRUE ~ Expected_Value2))
experiment2 <- experiment %>%
mutate(TransferPrice3 =
case_when(str_detect(TransferPrice, "k") ~ TransferPrice2/1000, TRUE ~ TransferPrice2))
Final_Graph <- experiment2 %>%
select(Name, Age, Position, Expected_Value3, TransferPrice3) %>%
rename(
"Expected Value (Millions)" = Expected_Value3,
"Transfer Price (Millions)" = TransferPrice3
>>>>>>> Stashed changes
)
#Model with player_group
mod3 <- lm(log_value ~ passing + physic + dribbling + pace + physic + shooting + is_attacker, is_midfielder, is_defender, data = players)
#Conditions
mplot(mod3, which = 1)
mplot(mod3, which = 1)
#Model with player_group
mod3 <- lm(log_value ~ passing + physic + dribbling + pace + physic + shooting + is_attacker, is_midfielder, is_defender, data = players)
players <- players |>
mutate(
is_attacker = ifelse(player_positions %in% c("CF", "SS", "ST", "LW", "RW"), 1, 0),
is_midfielder = ifelse(player_positions %in% c("LM", "LCM", "CM", "RCM", "RM", "CDM", "CAM"), 1, 0),
is_defender = ifelse(player_positions %in% c("LWB", "LB", "LCB", "CB", "RCB", "RB", "RWB", "SW"), 1, 0)
)
#Model with player_group
mod3 <- lm(log_value ~ passing + physic + dribbling + pace + physic + shooting + is_attacker, is_midfielder, is_defender, data = players)
#Conditions
mplot(mod3, which = 1)
players <- players |>
mutate(
is_attacker = ifelse(player_positions %in% c("CF", "SS", "ST", "LW", "RW"), 1, 0),
is_midfielder = ifelse(player_positions %in% c("LM", "LCM", "CM", "RCM", "RM", "CDM", "CAM"), 1, 0),
is_defender = ifelse(player_positions %in% c("LWB", "LB", "LCB", "CB", "RCB", "RB", "RWB", "SW"), 1, 0)
)
#Model with player_group
mod3 <- lm(log_value ~ passing + physic + dribbling + pace + physic + shooting + is_attacker + is_midfielder + is_defender, data = players)
#Conditions
mplot(mod3, which = 1)
mplot(mod3, which = 2)
car::vif(mod3)
players <- players |>
mutate(
is_attacker = ifelse(player_positions %in% c("CF", "SS", "ST", "LW", "RW"), 1, 0),
is_midfielder = ifelse(player_positions %in% c("LM", "LCM", "CM", "RCM", "RM", "CDM", "CAM"), 1, 0),
is_defender = ifelse(player_positions %in% c("LWB", "LB", "LCB", "CB", "RCB", "RB", "RWB", "SW"), 1, 0)
)
<<<<<<< Updated upstream
#Model with player_group
mod3 <- lm(log_value ~ passing + physic + dribbling + pace + physic + shooting + is_midfielder + is_defender, data = players)
#Conditions
mplot(mod3, which = 1)
mplot(mod3, which = 2)
car::vif(mod3)
#Model Summary
msummary(mod3)
#Best Subsets
best3 <- regsubsets(log_value ~ passing + physic + dribbling + pace + physic + shooting + player_group, data = players, nbest = 1)
with(summary(best3), data.frame(rsq, cp, outmat))
#Model with player_group
mod3 <- lm(log_value ~ passing + physic + dribbling + pace + physic + shooting + player_group, data = players)
#Conditions
mplot(mod3, which = 1)
mplot(mod3, which = 2)
car::vif(mod3)
#Model Summary
msummary(mod3)
View(mod)
with(summary(best3), data.frame(rsq, cp, outmat))
players <- players |>
mutate(is_midfielder = ifelse(player_positions %in% c("LM", "LCM", "CM", "RCM", "RM", "CDM", "CAM"), 1, 0))
#Model with player_group
mod4 <- lm(log_value ~ passing + physic + dribbling + pace + physic + shooting + is_midfielder, data = players)
#Conditions
mplot(mod4, which = 1)
mplot(mod4, which = 2)
car::vif(mod4)
#Model Summary
msummary(mod4)
#Final Model
mod4 <- lm(log_value ~ passing + physic + dribbling + is_midfielder, data = players)
#Conditions
mplot(mod4, which = 1)
mplot(mod4, which = 2)
car::vif(mod4)
#Model Summary
msummary(mod4)
=======
transfers$short_name <- str_extract(transfers$Name, "[A-Z]\\.\\s?[A-Z][a-z]+")
transfers$Name <- str_extract(transfers$Name, "[A-Z]\\.\\s?[A-Z][a-z]+")
transfers <- transfers %>%
select(Name, TransferPriceMillionsEuros) %>%
na.omit() %>%
rename(
"short_name" = Name
)
players <- readRDS("data/player_data.rds")
Final_Dataset <-  inner_join(players, transfers, by = "short_name")
nA2 <- anti_join(transfer_table1, tranfers, by = "short_name")
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(dplyr)
library(ggplot2)
library(mosaic)
library(Stat2Data)
library(leaps)
library(broom)
library(rvest)
library(methods)
library(GGally)
transfers <- transfer_table1
transfers$Buyer <- NA
transfers$Buyer[1:3] <- "Arsenal"
transfers$Buyer[4:11] <- "Aston Villa"
transfers$Buyer[12:18] <- "AFC Bournemouth"
transfers$Buyer[19:25] <- "Brentford"
transfers$Buyer[26:40] <- "Brighton & Hove Albion"
transfers$Buyer[41:53] <- "Burnley"
transfers$Buyer[54:70] <- "Chelsea"
transfers$Buyer[71:76] <- "Crystal Palace"
transfers$Buyer[77:82] <- "Everton"
transfers$Buyer[83:90] <- "Fulham"
transfers$Buyer[91:97] <- "Liverpool"
transfers$Buyer[98:110] <- "Luton Town"
transfers$Buyer[111:117] <- "Manchester City"
transfers$Buyer[118:124] <- "Manchester United"
transfers$Buyer[125:129] <- "Newcastle United"
transfers$Buyer[130:140] <- "Nottingham Forest"
transfers$Buyer[141:151] <- "Sheffield United"
transfers$Buyer[152:162] <- "Tottenham Hotspur"
transfers$Buyer[163:168] <- "West Ham United"
transfers$Buyer[169:175] <- "Wolverhampton Wanderers"
transfers <- na.omit(transfers)
transfers <- transfers[transfers$TransferPrice != "€870k", ]
transfers <- transfers %>%
select(Name, Age, Position, Seller, TransferPrice2, Buyer)
transfers <- transfers %>%
rename(
"TransferPriceMillionsEuros" = TransferPrice2
)
transfers$short_name <- str_extract(transfers$Name, "[A-Z]\\.\\s?[A-Z][a-z]+")
transfers$Name <- str_extract(transfers$Name, "[A-Z]\\.\\s?[A-Z][a-z]+")
transfers <- transfers %>%
select(Name, TransferPriceMillionsEuros) %>%
na.omit() %>%
rename(
"short_name" = Name
)
players <- readRDS("data/player_data.rds")
Final_Dataset <-  inner_join(players, transfers, by = "short_name")
nA2 <- anti_join(transfer_table1, transfers, by = "short_name")
View(transfer_table)
View(transfer_table1)
transfers <- transfer_table1
transfers$Buyer <- NA
transfers$Buyer[1:3] <- "Arsenal"
transfers$Buyer[4:11] <- "Aston Villa"
transfers$Buyer[12:18] <- "AFC Bournemouth"
transfers$Buyer[19:25] <- "Brentford"
transfers$Buyer[26:40] <- "Brighton & Hove Albion"
transfers$Buyer[41:53] <- "Burnley"
transfers$Buyer[54:70] <- "Chelsea"
transfers$Buyer[71:76] <- "Crystal Palace"
transfers$Buyer[77:82] <- "Everton"
transfers$Buyer[83:90] <- "Fulham"
transfers$Buyer[91:97] <- "Liverpool"
transfers$Buyer[98:110] <- "Luton Town"
transfers$Buyer[111:117] <- "Manchester City"
transfers$Buyer[118:124] <- "Manchester United"
transfers$Buyer[125:129] <- "Newcastle United"
transfers$Buyer[130:140] <- "Nottingham Forest"
transfers$Buyer[141:151] <- "Sheffield United"
transfers$Buyer[152:162] <- "Tottenham Hotspur"
transfers$Buyer[163:168] <- "West Ham United"
transfers$Buyer[169:175] <- "Wolverhampton Wanderers"
transfers <- na.omit(transfers)
transfers <- transfers[transfers$TransferPrice != "€870k", ]
transfers <- transfers %>%
select(Name, Age, Position, Seller, TransferPrice2, Buyer)
transfers <- transfers %>%
rename(
"TransferPriceMillionsEuros" = TransferPrice2
)
transfers$short_name <- str_extract(transfers$Name, "[A-Z]\\.\\s?[A-Z][a-z]+")
transfers$Name <- str_extract(transfers$Name, "[A-Z]\\.\\s?[A-Z][a-z]+")
transfers <- transfers %>%
select(Name, TransferPriceMillionsEuros) %>%
na.omit() %>%
rename(
"short_name" = Name
)
players <- readRDS("data/player_data.rds")
Final_Dataset <-  inner_join(players, transfers, by = "short_name")
tranfers_table1 <- transfer_table1 %>%
rename(
"short_name" = Name
)
nA2 <- anti_join(transfer_table1, transfers, by = "short_name")
View(transfers)
View(transfer_table1)
View(tranfers_table1)
transfers <- transfer_table1
transfers$Buyer <- NA
transfers$Buyer[1:3] <- "Arsenal"
transfers$Buyer[4:11] <- "Aston Villa"
transfers$Buyer[12:18] <- "AFC Bournemouth"
transfers$Buyer[19:25] <- "Brentford"
transfers$Buyer[26:40] <- "Brighton & Hove Albion"
transfers$Buyer[41:53] <- "Burnley"
transfers$Buyer[54:70] <- "Chelsea"
transfers$Buyer[71:76] <- "Crystal Palace"
transfers$Buyer[77:82] <- "Everton"
transfers$Buyer[83:90] <- "Fulham"
transfers$Buyer[91:97] <- "Liverpool"
transfers$Buyer[98:110] <- "Luton Town"
transfers$Buyer[111:117] <- "Manchester City"
transfers$Buyer[118:124] <- "Manchester United"
transfers$Buyer[125:129] <- "Newcastle United"
transfers$Buyer[130:140] <- "Nottingham Forest"
transfers$Buyer[141:151] <- "Sheffield United"
transfers$Buyer[152:162] <- "Tottenham Hotspur"
transfers$Buyer[163:168] <- "West Ham United"
transfers$Buyer[169:175] <- "Wolverhampton Wanderers"
transfers <- na.omit(transfers)
transfers <- transfers[transfers$TransferPrice != "€870k", ]
transfers <- transfers %>%
select(Name, Age, Position, Seller, TransferPrice2, Buyer)
transfers <- transfers %>%
rename(
"TransferPriceMillionsEuros" = TransferPrice2
)
transfers$short_name <- str_extract(transfers$Name, "[A-Z]\\.\\s?[A-Z][a-z]+")
transfers$Name <- str_extract(transfers$Name, "[A-Z]\\.\\s?[A-Z][a-z]+")
transfers <- transfers %>%
select(Name, TransferPriceMillionsEuros) %>%
na.omit() %>%
rename(
"short_name" = Name
)
players <- readRDS("data/player_data.rds")
Final_Dataset <-  inner_join(players, transfers, by = "short_name")
transfer_table1 <- transfer_table1 %>%
rename(
"short_name" = Name
)
nA2 <- anti_join(transfer_table1, transfers, by = "short_name")
nA <- anti_join(transfers, Final_Dataset, by = "short_name")
View(transfers)
View(transfer_table1)
transfers <- transfer_table1
transfers$Buyer <- NA
transfers$Buyer[1:3] <- "Arsenal"
transfers$Buyer[4:11] <- "Aston Villa"
transfers$Buyer[12:18] <- "AFC Bournemouth"
transfers$Buyer[19:25] <- "Brentford"
transfers$Buyer[26:40] <- "Brighton & Hove Albion"
transfers$Buyer[41:53] <- "Burnley"
transfers$Buyer[54:70] <- "Chelsea"
transfers$Buyer[71:76] <- "Crystal Palace"
transfers$Buyer[77:82] <- "Everton"
transfers$Buyer[83:90] <- "Fulham"
transfers$Buyer[91:97] <- "Liverpool"
transfers$Buyer[98:110] <- "Luton Town"
transfers$Buyer[111:117] <- "Manchester City"
transfers$Buyer[118:124] <- "Manchester United"
transfers$Buyer[125:129] <- "Newcastle United"
transfers$Buyer[130:140] <- "Nottingham Forest"
transfers$Buyer[141:151] <- "Sheffield United"
transfers$Buyer[152:162] <- "Tottenham Hotspur"
transfers$Buyer[163:168] <- "West Ham United"
transfers$Buyer[169:175] <- "Wolverhampton Wanderers"
transfers <- na.omit(transfers)
transfers <- transfers[transfers$TransferPrice != "€870k", ]
transfers <- transfers %>%
select(Name, Age, Position, Seller, TransferPrice2, Buyer)
View(transfers)
View(transfer_table)
View(tranfers_table1)
View(transfer_table)
View(transfer_table1)
knitr::opts_chunk$set(echo = TRUE)
options(digits = 6)
#Libraries
library(tidyverse)
library(mosaic)
library(broom)
library(rvest)
library(GGally)
library(gridExtra)
#Data Sets
players <- readRDS("data/player_data.rds")
#UNIVARIATE ANALYSIS
#Quantitative Variables
ggplot(players, aes(x = value_eur)) +
geom_density(fill = "skyblue", color = "blue", alpha = 0.5) +
labs(title = "Distribution of Value (in Euros)", x = "Players' Values (in euros)")
ev1 <- ggplot(players, aes(x = pace)) +
geom_density(fill = "skyblue", color = "blue", alpha = 0.5)+
labs(title = "Distribution of Pace", x = "Players' Pace Rating")
ev2 <- ggplot(players, aes(x = shooting)) +
geom_density(fill = "skyblue", color = "blue", alpha = 0.5)+
labs(title = "Distribution of Shooting", x = "Players' Shooting Rating")
favstats(~ shooting, data = players)
ev3 <- ggplot(players, aes(x = passing)) +
geom_density(fill = "skyblue", color = "blue", alpha = 0.5)+
labs(title = "Distribution of Passing", x = "Players' Passing Rating")
ev4 <- ggplot(players, aes(x = dribbling)) +
geom_density(fill = "skyblue", color = "blue", alpha = 0.5)+
labs(title = "Distribution of Dribbling", x = "Players' Dribbling Rating")
ev5 <- ggplot(players, aes(x = defending)) +
geom_density(fill = "skyblue", color = "blue", alpha = 0.5)+
labs(title = "Distribution of Defending", x = "Players' Defending Rating")
ev6 <- ggplot(players, aes(x = physic)) +
geom_density(fill = "skyblue", color = "blue", alpha = 0.5)+
labs(title = "Distribution of Physicality", x = "Players' Physicality Rating")
#Qualitative Variables
ggplot(players, aes(x = club_name)) +
geom_bar(fill = "skyblue", color = "blue") +
labs(title = "Distribution of Clubs", x = "Clubs") +
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1))
#FAVSTATS
favstats(~ pace, data = players)
favstats(~ shooting, data = players)
favstats(~ passing, data = players)
favstats(~ dribbling, data = players)
favstats(~ defending, data = players)
favstats(~ physic, data = players)
#DISPLAYED GRAPHS
grid.arrange(ev1, ev2, ev3, ev4, ev5, ev6, ncol=3)
ggplot(players, aes(x = pace, y = value_eur)) +
geom_point()
ggplot(players, aes(x = shooting, y = value_eur)) +
geom_point()
ggplot(players, aes(x = passing, y = value_eur)) +
geom_point()
ggplot(players, aes(x = dribbling, y = value_eur)) +
geom_point()
ggplot(players, aes(x = defending, y = value_eur)) +
geom_point()
ggplot(players, aes(x = physic, y = value_eur)) +
geom_point()
#Qualitative Variable
ggplot(players, aes(x = club_name, y = value_eur)) +
geom_boxplot() +
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1))
#GGPairs
players2 <- select(players, "pace", "shooting", "passing", "dribbling", "defending", "physic", "value_eur")
ggpairs(players2)
#UNIVARIATE ANALYSIS
#Quantitative Variables
ggplot(players, aes(x = value_eur)) +
geom_density(fill = "skyblue", color = "blue", alpha = 0.5) +
labs(title = "Distribution of Value (in Euros)", x = "Players' Values (in euros)")
ev1 <- ggplot(players, aes(x = pace)) +
geom_density(fill = "skyblue", color = "blue", alpha = 0.5)+
labs(title = "Distribution of Pace", x = "Players' Pace Rating")
ev2 <- ggplot(players, aes(x = shooting)) +
geom_density(fill = "skyblue", color = "blue", alpha = 0.5)+
labs(title = "Distribution of Shooting", x = "Players' Shooting Rating")
favstats(~ shooting, data = players)
ev3 <- ggplot(players, aes(x = passing)) +
geom_density(fill = "skyblue", color = "blue", alpha = 0.5)+
labs(title = "Distribution of Passing", x = "Players' Passing Rating")
ev4 <- ggplot(players, aes(x = dribbling)) +
geom_density(fill = "skyblue", color = "blue", alpha = 0.5)+
labs(title = "Distribution of Dribbling", x = "Players' Dribbling Rating")
ev5 <- ggplot(players, aes(x = defending)) +
geom_density(fill = "skyblue", color = "blue", alpha = 0.5)+
labs(title = "Distribution of Defending", x = "Players' Defending Rating")
ev6 <- ggplot(players, aes(x = physic)) +
geom_density(fill = "skyblue", color = "blue", alpha = 0.5)+
labs(title = "Distribution of Physicality", x = "Players' Physicality Rating")
#Qualitative Variables
ggplot(players, aes(x = club_name)) +
geom_bar(fill = "skyblue", color = "blue") +
labs(title = "Distribution of Clubs", x = "Clubs") +
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1))
#FAVSTATS
favstats(~ pace, data = players)
favstats(~ shooting, data = players)
favstats(~ passing, data = players)
favstats(~ dribbling, data = players)
favstats(~ defending, data = players)
favstats(~ physic, data = players)
#UNIVARIATE ANALYSIS
#Quantitative Variables
ggplot(players, aes(x = value_eur)) +
geom_density(fill = "skyblue", color = "blue", alpha = 0.5) +
labs(title = "Distribution of Value (in Euros)", x = "Players' Values (in euros)")
ev1 <- ggplot(players, aes(x = pace)) +
geom_density(fill = "skyblue", color = "blue", alpha = 0.5)+
labs(title = "Distribution of Pace", x = "Pace Ratings")
ev2 <- ggplot(players, aes(x = shooting)) +
geom_density(fill = "skyblue", color = "blue", alpha = 0.5)+
labs(title = "Distribution of Shooting", x = "Shooting Ratings")
favstats(~ shooting, data = players)
ev3 <- ggplot(players, aes(x = passing)) +
geom_density(fill = "skyblue", color = "blue", alpha = 0.5)+
labs(title = "Distribution of Passing", x = "Passing Ratings")
ev4 <- ggplot(players, aes(x = dribbling)) +
geom_density(fill = "skyblue", color = "blue", alpha = 0.5)+
labs(title = "Distribution of Dribbling", x = "Dribbling Ratings")
ev5 <- ggplot(players, aes(x = defending)) +
geom_density(fill = "skyblue", color = "blue", alpha = 0.5)+
labs(title = "Distribution of Defending", x = "Defending Ratings")
ev6 <- ggplot(players, aes(x = physic)) +
geom_density(fill = "skyblue", color = "blue", alpha = 0.5)+
labs(title = "Distribution of Physicality", x = "Physicality Ratings")
#Qualitative Variables
ggplot(players, aes(x = club_name)) +
geom_bar(fill = "skyblue", color = "blue") +
labs(title = "Distribution of Clubs", x = "Clubs") +
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1))
#FAVSTATS
favstats(~ pace, data = players)
favstats(~ shooting, data = players)
favstats(~ passing, data = players)
favstats(~ dribbling, data = players)
favstats(~ defending, data = players)
favstats(~ physic, data = players)
#DISPLAYED GRAPHS
grid.arrange(ev1, ev2, ev3, ev4, ev5, ev6, ncol=3)
#FAVSTATS
favstats(~ pace, data = players)
favstats(~ shooting, data = players)
favstats(~ passing, data = players)
favstats(~ dribbling, data = players)
favstats(~ defending, data = players)
favstats(~ physic, data = players)
favstats(~ physic, data = players)
players2 <- select(players, "pace", "shooting", "passing", "dribbling", "defending", "physic", "value_eur")
ggpairs(players2)
car::vif
ggplot(players, aes(x = pace, y = value_eur)) +
geom_point()
ggplot(players, aes(x = shooting, y = value_eur)) +
geom_point()
ggplot(players, aes(x = passing, y = value_eur)) +
geom_point()
ggplot(players, aes(x = dribbling, y = value_eur)) +
geom_point()
ggplot(players, aes(x = defending, y = value_eur)) +
geom_point()
ggplot(players, aes(x = physic, y = value_eur)) +
geom_point()
a <- ggplot(players, aes(x = pace, y = value_eur)) +
geom_point()
b <- ggplot(players, aes(x = shooting, y = value_eur)) +
geom_point()
c <- ggplot(players, aes(x = passing, y = value_eur)) +
geom_point()
d <- ggplot(players, aes(x = dribbling, y = value_eur)) +
geom_point()
e <- ggplot(players, aes(x = defending, y = value_eur)) +
geom_point()
f <- ggplot(players, aes(x = physic, y = value_eur)) +
geom_point()
a <- ggplot(players, aes(x = pace, y = value_eur)) +
geom_point()
b <- ggplot(players, aes(x = shooting, y = value_eur)) +
geom_point()
c <- ggplot(players, aes(x = passing, y = value_eur)) +
geom_point()
d <- ggplot(players, aes(x = dribbling, y = value_eur)) +
geom_point()
e <- ggplot(players, aes(x = defending, y = value_eur)) +
geom_point()
f <- ggplot(players, aes(x = physic, y = value_eur)) +
geom_point()
grid.arrange(a,b,c,d,e,f)
players2 <- select(players, "pace", "shooting", "passing", "dribbling", "defending", "physic")
ggpairs(players2)
car::vif
#DISPLAYED GRAPHS
grid.arrange(ev1, ev2, ev3, ev4, ev5, ev6, ncol=3)
a <- ggplot(players, aes(x = pace, y = value_eur)) +
geom_point()
b <- ggplot(players, aes(x = shooting, y = value_eur)) +
geom_point()
c <- ggplot(players, aes(x = passing, y = value_eur)) +
geom_point()
d <- ggplot(players, aes(x = dribbling, y = value_eur)) +
geom_point()
e <- ggplot(players, aes(x = defending, y = value_eur)) +
geom_point()
f <- ggplot(players, aes(x = physic, y = value_eur)) +
geom_point()
grid.arrange(a,b,c,d,e,f)
car::vif
players2 <- select(players, "pace", "shooting", "passing", "dribbling", "defending", "physic")
ggpairs(players2)
>>>>>>> Stashed changes
